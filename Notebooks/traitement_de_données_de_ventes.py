# -*- coding: utf-8 -*-
"""Traitement de donn√©es de ventes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19_iBEssgPrQc1FDGz2oKWB36XNRPYZCh
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

url_data = "/content/train.csv"
df = pd.read_csv(url_data)
df.head(5)

"""#Explorer les donn√©es

"""

df.info() # r√©sum√© du DataFrame

df.describe() # stats descriptives

df.columns # noms des colonnes

df.shape # dimensions

"""# Nettoyage de base"""

#  Renommer les colonnes
df.rename(columns={
    'Row ID': 'ID Ligne',
    'Order ID': 'ID Commande',
    'Order Date': 'Date Commande',
    'Ship Date': 'Date Expedition',
    'Ship Mode': 'Mode Livraison',
    'Customer ID': 'ID Client',
    'Customer Name': 'Nom Client',
    'Segment': 'Segment Client',
    'Country': 'Pays',
    'City': 'Ville',
    'State': '√âtat',
    'Postal Code': 'Code Postal',
    'Region': 'R√©gion',
    'Product ID': 'ID Produit',
    'Category': 'Cat√©gorie',
    'Sub-Category': 'Sous-Cat√©gorie',
    'Product Name': 'Nom Produit',
    'Sales': 'Ventes'
}, inplace=True)

df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

df.head(5)

# G√©rer les valeurs manquantes

df.isnull().sum()       # nombre de valeurs manquantes par colonne

"""Nous constatons que dans la colonne code postale il ya 11 valeurs manquantes , on va devoir les supprimer"""

df.dropna(inplace=True) # supprimer les lignes avec des valeurs manquantes
df.isnull().sum()

df.drop_duplicates(inplace=True)

df.duplicated() # lignes dupliqu√©es

df["date_commande"].dtype

df["date_exp√©dition"].dtype

"""Les dates ne sont pas au bon format, alors nous allons changer le types pour des dates


"""

df["date_exp√©dition"] = pd.to_datetime(df["date_exp√©dition"], format='%d/%m/%Y')
df["date_commande"] = pd.to_datetime(df["date_commande"], format='%d/%m/%Y')

print(df["date_exp√©dition"].dtype)
print(df["date_commande"].dtype)

df

"""#Transformation des donn√©es

"""

# Extraire l'ann√©e, le mois, le jour

df["Ann√©e Commande"] = df["date_commande"].dt.year
df["Mois Commande"] = df["date_commande"].dt.month
df["Jour Commande"] = df["date_commande"].dt.day

# le d√©lai de livraison

df["D√©lai Livraison"] = (df["date_exp√©dition"] - df["date_commande"]).dt.days

df["Mois Commande"] = df["date_commande"].dt.strftime("%B %Y")

df.head(5)

"""# Cr√©er un sch√©ma en √©toile"""

Dim_Lieu = df[['pays', 'ville', '√©tat', 'r√©gion', 'code_postal']].drop_duplicates().reset_index(drop=True)
Dim_Lieu['id_lieu'] = Dim_Lieu.index + 1  # Cr√©ation d'un identifiant unique
Dim_Lieu.head(5)

# Merge pour ajouter id_lieu dans le DataFrame d'origine
df_lieu = df.merge(Dim_Lieu, on=['pays', 'ville', '√©tat', 'r√©gion', 'code_postal'], how='left')

Faits_Ventes = df_lieu[[
    'id_ligne', 'id_commande', 'id_client', 'id_produit',
    'date_commande', 'ventes', 'D√©lai Livraison', 'id_lieu'
]]


Faits_Ventes.head(5)

Dim_Temps = df[[
    'date_commande', 'Ann√©e Commande', 'Mois Commande', 'Jour Commande'
]].drop_duplicates().rename(columns={
    'date_commande': 'id_date',
    'Ann√©e Commande': 'ann√©e',
    'Mois Commande': 'mois',
    'Jour Commande': 'jour'
})
Dim_Temps.shape

Dim_Client = df_lieu[['id_client', 'nom_client', 'segment_client', 'id_lieu']].drop_duplicates()
Dim_Client.head(5)

Dim_Produit = df[['id_produit', 'nom_produit', 'cat√©gorie', 'sous-cat√©gorie']].drop_duplicates()

Dim_Commande = df[['id_commande', 'date_commande', 'date_exp√©dition', 'mode_livraison','D√©lai Livraison']].drop_duplicates()

"""üß† R√©sum√© du sch√©ma en √©toile produit
Fait principal : Faits_Ventes (mesures : ventes, d√©lai livraison)

Dimensions reli√©es :

Dim_Client

Dim_Produit

Dim_Lieu

Dim_Commande

Dim_Temps

# Exporter chaque table en CSV
"""

# Exporter chaque table en CSV
Dim_Lieu.to_csv("Dim_Lieu.csv", index=False)
df_lieu.to_csv("df_lieu.csv", index=False)
Faits_Ventes.to_csv("Faits_Ventes.csv", index=False)
Dim_Temps.to_csv("Dim_Temps.csv", index=False)
Dim_Client.to_csv("Dim_Client.csv", index=False)
Dim_Produit.to_csv("Dim_Produit.csv", index=False)
Dim_Commande.to_csv("Dim_Commande.csv", index=False)

# 2. T√©l√©chargement automatique (pour Google Colab uniquement)
from google.colab import files

files.download("Dim_Lieu.csv")
files.download("df_lieu.csv")
files.download("Faits_Ventes.csv")
files.download("Dim_Temps.csv")
files.download("Dim_Client.csv")
files.download("Dim_Produit.csv")
files.download("Dim_Commande.csv")